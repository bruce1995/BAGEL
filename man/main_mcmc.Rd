% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BAGEL.R
\name{main_mcmc}
\alias{main_mcmc}
\title{The function returns the posted-brun-in MCMC samples thinned by the thinning factor}
\usage{
main_mcmc(Data, Burnin, Niter, thin = 1, hyper_parameter = list(), seed = 1)
}
\arguments{
\item{Data}{{a list giving observed data. It includes:
\code{U} giving the depression scores, each row corresponds to one visit;
\code{Z} giving the binary indicator matrix for drug usage information, each row corresponds to one visit;
\code{X} giving the covariates matrix, it also includes the patient ID (1st column) and visit time (2nd column);
\code{D} giving the number of drugs;
\code{Q} giving the number of depression scores;
\code{S} giving the number of covariates;
\code{N} giving the number of patients in the dataset;
\code{B} giving the number of bases for P-spline.}}

\item{Burnin}{number of burn-in iterations in MCMC}

\item{Niter}{number of iterations after burn-in in MCMC}

\item{thin}{the MCMC thinning factor}

\item{hyper_parameter}{a list giving hyperparameters used in MCMC. See details below for more information.}

\item{seed}{the starting number used to generate random numbers}
}
\value{
{the posted-brun-in MCMC samples thinned by the thinning factor, along with the following:
\code{D} the number of drugs;
\code{Q} the number of depression scores;
\code{S} the number of covariates;
\code{knots}  the knots for P-spline;
\code{B} the number of bases for P-spline;
\code{sigma_square} the variance of noise for the latent continuous depression scores;
\code{m0} the concentration parameter for Dirichlet Process.
}
}
\description{
This function returns the posted-brun-in MCMC samples thinned by the thinning factor, provided observed data and initial values for some parameters.
}
\details{
\code{hyper_parameter} is a list giving hyperparameters used in MCMC. It includes:
\code{Comega_init} giving the intial value of \code{Comega}, which is the correlation matrix which captures the dependencies among depression items;
\code{rho_init} giving the intial value of \code{rho}, which is the prior probability of the binary indicator cube entries being 1;
\code{H_init} giving the intial value of \code{H}, which is the number of clusters;
\code{a_init} giving the intial value of \code{a}, which is the thresholds that connects the latent and observed depression scores;
\code{e_init} giving the intial value of \code{e}, which is the clustering membership vector;
\code{alpha_init} giving the intial value of \code{alpha}, which is the linear coefficients dependent on drug effect (it should be a cube, each slice corresponds to one cluster, each slice should be a 'S' by 'DQ' matrix);
\code{gamma_init} giving the intial value of \code{gamma}, which is the linear coefficients for the P-spline (it should be a cube, each slice corresponds to one cluster, each slice should be a 'B' by 'DQ' matrix);
\code{beta_init} giving the intial value of \code{beta}, which is the linear coefficients not dependent on drug effect (it should be a cube, each slice corresponds to one cluster, each slice should be a 'Q' by '1+S' matrix with the first column being the intercept);
\code{R_init} giving the intial value of \code{R}, which is the binary indicator cube (it should be a cube, each slice corresponds to one cluster, each slice should be a 'Q' by 'D' matrix);
\code{sigma_square_alpha_init} giving the intial value of \code{sigma_square_alpha}, which is the variance of \code{alpha};
\code{sigma_square_beta_init} giving the intial value of \code{sigma_square_beta}, which is the variance of \code{beta};
\code{sigma_square_gamma_init} giving the intial value of \code{sigma_square_gamma}, which is the variance of \code{gamma};
\code{sigma_square} giving the variance of noise for the latent continuous depression scores;
\code{m0} giving the concentration parameter for Dirichlet Process;
\code{H_max} giving the maximum number of clusters allowed;
\code{a_rho} giving the first hyper-parameter of \code{rho} with default value being 1, where we assume \code{rho}~Beta(alpha, beta);
\code{b_rho} giving the second hyper-parameter of \code{rho};
\code{step_a} giving the step size for Metropolis–Hastings algorithm updating \code{a};
\code{step_Comega} giving the step size for Metropolis–Hastings algorithm updating \code{Comega};
\code{a_beta} giving the first hyper-parameter of \code{sigma_square_beta}, where we assume variance of \code{beta} is sampled from inv-Gamma(a,b);
\code{b_beta} giving the second hyper-parameter of \code{sigma_square_beta};
\code{a_alpha} giving the first hyper-parameter of \code{sigma_square_alpha}, where we assume variance of \code{alpha} is sampled from inv-Gamma(a,b);
\code{b_alpha} giving the second hyper-parameter of \code{sigma_square_alpha};
\code{a_gamma} giving the first hyper-parameter of \code{sigma_square_gamma}, where we assume variance of \code{gamma} is sampled from inv-Gamma(a,b);
\code{b_gamma} giving the second hyper-parameter of \code{sigma_square_gamma}.
}
\examples{
\dontrun{
library(BAGEL)
data("simulated_data")
mcmc <- main_mcmc(Data=simulated_data, 2,10,5)
x_new <- simulated_data$X[10,]
z_new <- simulated_data$Z[10,]
depression_prob_predict(mcmc, z_new, x_new)
}
}
